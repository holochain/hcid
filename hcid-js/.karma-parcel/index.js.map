{"version":3,"sources":["../node_modules/util/support/isBufferBrowser.js","../node_modules/inherits/inherits_browser.js","../node_modules/process/browser.js","../node_modules/util/util.js","../node_modules/path-browserify/index.js","../lib/bindgen_bg.js","../lib/bindgen.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../lib/index.js","../node_modules/assertion-error/index.js","../node_modules/pathval/index.js","../node_modules/chai/lib/chai/utils/flag.js","../node_modules/chai/lib/chai/utils/test.js","../node_modules/type-detect/type-detect.js","../node_modules/chai/lib/chai/utils/expectTypes.js","../node_modules/chai/lib/chai/utils/getActual.js","../node_modules/get-func-name/index.js","../node_modules/chai/lib/chai/utils/getProperties.js","../node_modules/chai/lib/chai/utils/getEnumerableProperties.js","../node_modules/chai/lib/chai/config.js","../node_modules/chai/lib/chai/utils/inspect.js","../node_modules/chai/lib/chai/utils/objDisplay.js","../node_modules/chai/lib/chai/utils/getMessage.js","../node_modules/chai/lib/chai/utils/transferFlags.js","../node_modules/deep-eql/index.js","../node_modules/chai/lib/chai/utils/isProxyEnabled.js","../node_modules/chai/lib/chai/utils/addProperty.js","../node_modules/chai/lib/chai/utils/addLengthGuard.js","../node_modules/chai/lib/chai/utils/proxify.js","../node_modules/chai/lib/chai/utils/addMethod.js","../node_modules/chai/lib/chai/utils/overwriteProperty.js","../node_modules/chai/lib/chai/utils/overwriteMethod.js","../node_modules/chai/lib/chai/utils/addChainableMethod.js","../node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","../node_modules/chai/lib/chai/utils/compareByInspect.js","../node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","../node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","../node_modules/check-error/index.js","../node_modules/chai/lib/chai/utils/isNaN.js","../node_modules/chai/lib/chai/utils/index.js","../node_modules/chai/lib/chai/assertion.js","../node_modules/chai/lib/chai/core/assertions.js","../node_modules/chai/lib/chai/interface/expect.js","../node_modules/chai/lib/chai/interface/should.js","../node_modules/chai/lib/chai/interface/assert.js","../node_modules/chai/lib/chai.js","../node_modules/chai/index.js","../../test/fixtures.json","../lib/encoding.test.js","entry.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","getOwnPropertyDescriptors","Object","obj","keys","descriptors","getOwnPropertyDescriptor","formatRegExp","format","f","isString","objects","inspect","join","str","String","replace","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","noDeprecation","warned","deprecated","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnviron","debuglog","set","isUndefined","toUpperCase","RegExp","test","pid","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","style","arrayToHash","hash","forEach","val","idx","value","recurseTimes","isFunction","constructor","ret","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","isError","indexOf","formatError","isRegExp","toString","isDate","Date","base","braces","isArray","n","toUTCString","output","formatArray","map","key","formatProperty","pop","reduceToSingleString","simple","isNumber","l","hasOwnProperty","match","desc","get","split","line","substr","numLinesEst","reduce","prev","cur","ar","arg","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","isBuffer","require","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","log","inherits","origin","add","prop","kCustomPromisifiedSymbol","Symbol","undefined","promisify","original","TypeError","defineProperty","enumerable","writable","configurable","promiseResolve","promiseReject","promise","Promise","resolve","reject","err","setPrototypeOf","getPrototypeOf","defineProperties","custom","callbackifyOnRejected","reason","cb","newReason","callbackify","callbackified","maybeCb","self","then","rej","path","__dirname","bytes","readFileSync","imports","wasmModule","WebAssembly","Module","wasmInstance","Instance","wasm","TextEncoder","cachedTextEncoder","cachegetUint8Memory","getUint8Memory","buffer","memory","Uint8Array","WASM_VECTOR_LEN","passStringToWasm","buf","encode","ptr","__wbindgen_malloc","passArray8ToWasm","TextDecoder","cachedTextDecoder","getStringFromWasm","decode","subarray","cachedGlobalArgumentPtr","globalArgumentPtr","__wbindgen_global_argument_ptr","cachegetUint32Memory","getUint32Memory","Uint32Array","getArrayU8FromWasm","heap","fill","heap_next","addHeapObject","__wbindgen_string_new","p","getObject","dropObject","takeObject","__wbindgen_rethrow","freeEncoding","__wbg_encoding_free","Encoding","arg0","ptr0","len0","encoding_new","__wbindgen_free","retptr","encoding_encode","mem","rustptr","rustlen","realRet","slice","encoding_decode","encoding_is_corrupt","__wbindgen_throw","bindgen","txError","checkFixBuffer","Buffer","byteOffset","byteLength","encoding_name","_raw","data","is_corrupt","flag","flags","__flags","create","negate","expr","global","factory","define","amd","typeDetect","promiseExists","globalObject","symbolExists","mapExists","Map","setExists","Set","weakMapExists","WeakMap","weakSetExists","WeakSet","dataViewExists","DataView","symbolIteratorExists","iterator","symbolToStringTagExists","toStringTag","setEntriesExists","entries","mapEntriesExists","setIteratorPrototype","mapIteratorPrototype","arrayIteratorExists","arrayIteratorPrototype","stringIteratorExists","stringIteratorPrototype","toStringLeftSliceLength","toStringRightSliceLength","typeofObj","window","location","document","navigator","mimeTypes","plugins","HTMLElement","tagName","stringTag","objPrototype","AssertionError","type","expectTypes","types","flagMsg","ssfi","t","toLowerCase","sort","index","art","charAt","or","objType","some","expected","getActual","_obj","getProperties","object","result","addProperty","property","proto","getEnumerableProperties","includeStack","showDiff","truncateThreshold","useProxy","proxyExcludedKeys","getName","config","isDOMElement","nodeType","nodeName","outerHTML","xmlVersion","xmlSerializer","XMLSerializer","serializeToString","ns","container","createElementNS","appendChild","cloneNode","html","innerHTML","nameSuffix","typedArray","isTypedArray","formatTypedArray","Infinity","propDescriptor","objDisplay","kstr","splice","getMessage","actual","transferFlags","assertion","includeAll","FakeMap","_key","Math","random","now","getMap","setMap","isExtensible","MemoizeMap","memoizeCompare","leftHandOperand","rightHandOperand","memoizeMap","leftHandMap","memoizeSet","deepEqual","options","comparator","extensiveDeepEqual","simpleResult","simpleEqual","memoize","memoizeResultLeft","memoizeResultRight","comparatorResult","leftHandType","extensiveDeepEqualByType","valueOf","iterableEqual","regexpEqual","generatorEqual","entriesEqual","objectEqual","size","leftHandItems","rightHandItems","gatherEntries","getGeneratorEntries","hasIteratorFunction","target","getIteratorEntries","iteratorError","generator","generatorResult","next","accumulator","done","getEnumerableKeys","keysEqual","leftHandKeys","rightHandKeys","leftHandEntries","rightHandEntries","isProxyEnabled","Proxy","Reflect","chai","getter","propertyGetter","newAssertion","Assertion","fnLengthDesc","addLengthGuard","assertionName","isChainable","builtins","proxify","nonChainableMethodName","proxyGetter","has","suggestion","suggestionDistance","dist","stringDistanceCapped","strA","strB","cap","abs","memo","j","ch","charCodeAt","min","addMethod","method","methodWrapper","overwriteProperty","_get","_super","overwritingPropertyGetter","origLockSsfi","overwriteMethod","_method","overwritingMethodWrapper","canSetPrototype","testFn","excludeNames","filter","propDesc","Function","addChainableMethod","chainingBehavior","chainableBehavior","__methods","chainableMethodGetter","chainableMethodWrapper","asserterNames","asserterName","pd","overwriteChainableMethod","_chainingBehavior","overwritingChainableMethodGetter","overwritingChainableMethodWrapper","compareByInspect","a","b","getOwnEnumerablePropertySymbols","getOwnPropertySymbols","sym","getOwnEnumerableProperties","isNaN","pathval","eql","getPathInfo","hasProperty","checkError","_chai","util","lockSsfi","warn","assert","negateMsg","_actual","ok","chain","an","article","SameValueZero","includeChainingBehavior","include","isDeep","descriptor","included","isEql","item","props","firstErr","numErrs","propAssertion","compatibleConstructor","itemsCount","trim","checkArguments","assertEqual","prevLockSsfi","assertEql","assertAbove","doLength","msgPrefix","nType","errorMessage","shouldThrow","to","have","printObj","assertLeast","assertBelow","assertMost","start","finish","startType","finishType","range","assertInstanceOf","isInstanceOf","assertProperty","isNested","isOwn","nameType","pathInfo","exists","assertOwnProperty","assertOwnPropertyDescriptor","actualDescriptor","assertLengthChain","assertLength","assertMatch","exec","is","assertKeys","keysType","deepStr","mixedArgsMsg","any","all","expectedKey","actualKey","every","last","assertThrows","errorLike","errMsgMatcher","caughtErr","everyArgIsUndefined","everyArgIsDefined","Boolean","errorLikeFail","errMsgMatcherFail","errorLikeString","getConstructorName","isCompatibleInstance","compatibleInstance","isCompatibleConstructor","placeholder","isCompatibleMessage","compatibleMessage","respondTo","itself","context","satisfy","matcher","closeTo","delta","isSubsetOf","subset","superset","cmp","contains","ordered","elem","matchIdx","elem2","be","subject","failMsg","failNegateMsg","oneOf","list","assertChanges","initial","final","msgObj","assertIncreases","assertDecreases","assertDelta","behavior","realDelta","expression","isSealed","isFrozen","isFinite","expect","message","fail","operator","loadShould","shouldGetter","shouldSetter","should","equal","val1","val2","Throw","errt","errs","exist","not","Should","express","errmsg","isOk","isNotOk","act","exp","notEqual","strictEqual","notStrictEqual","deepStrictEqual","notDeepEqual","isAbove","abv","above","isAtLeast","atlst","least","isBelow","blw","below","isAtMost","atmst","most","isTrue","isNotTrue","isFalse","isNotFalse","isNotNull","NaN","isNotNaN","notExists","isDefined","isNotFunction","isNotObject","isNotArray","isNotString","isNotNumber","finite","isNotBoolean","typeOf","notTypeOf","instanceOf","notInstanceOf","inc","notInclude","deepInclude","deep","notDeepInclude","nestedInclude","nested","notNestedInclude","deepNestedInclude","notDeepNestedInclude","ownInclude","own","notOwnInclude","deepOwnInclude","notDeepOwnInclude","notMatch","notProperty","propertyVal","notPropertyVal","deepPropertyVal","notDeepPropertyVal","ownProperty","notOwnProperty","ownPropertyVal","notOwnPropertyVal","deepOwnPropertyVal","notDeepOwnPropertyVal","nestedProperty","notNestedProperty","nestedPropertyVal","notNestedPropertyVal","deepNestedPropertyVal","notDeepNestedPropertyVal","lengthOf","hasAnyKeys","hasAllKeys","containsAllKeys","contain","doesNotHaveAnyKeys","doesNotHaveAllKeys","hasAnyDeepKeys","hasAllDeepKeys","containsAllDeepKeys","doesNotHaveAnyDeepKeys","doesNotHaveAllDeepKeys","throws","assertErr","throw","doesNotThrow","approximately","sameMembers","set1","set2","same","members","notSameMembers","sameDeepMembers","notSameDeepMembers","sameOrderedMembers","notSameOrderedMembers","sameDeepOrderedMembers","notSameDeepOrderedMembers","includeMembers","notIncludeMembers","includeDeepMembers","notIncludeDeepMembers","includeOrderedMembers","notIncludeOrderedMembers","includeDeepOrderedMembers","notIncludeDeepOrderedMembers","inList","changes","change","changesBy","tmpMsg","by","doesNotChange","changesButNotBy","but","increases","increase","increasesBy","doesNotIncrease","increasesButNotBy","decreases","decrease","decreasesBy","doesNotDecrease","doesNotDecreaseBy","decreasesButNotBy","ifError","extensible","isNotExtensible","sealed","isNotSealed","frozen","isNotFrozen","isEmpty","empty","isNotEmpty","alias","as","used","use","core","fixtures","TEST_HEX_1","TEST_ID_1","describe","enc","beforeEach","afterEach","correct","it","id","equals","from","correctable","correctId","errantId","errantData"],"mappings":"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B,0BAAT,CAAoCjd,GAApC,EAAyC;AACxD,SAAOD,MAAM,CAACE,IAAP,CAAYD,GAAZ,EAAiBvC,MAAjB,CAAwBqf,+BAA+B,CAAC9c,GAAD,CAAvD,CAAP;AACD,CAFD;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5KA;;;;;;AAMA;;;;;;;;;;;AAYA,SAASkd,KAAT,CAAepZ,KAAf,EAAsB;AACpB;AACA;AACA,SAAOA,KAAK,KAAKA,KAAjB;AACD,EAED;;;AACA1H,MAAM,CAACC,OAAP,GAAiB0E,MAAM,CAACmc,KAAP,IAAgBA,KAAjC;;ACzBA;;;;;;AAMA;;;AAIA,IAAIC,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","file":"index.js","sourceRoot":"","sourcesContent":["module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","\nconst path = require('path').join(__dirname, 'bindgen_bg.wasm');\nconst bytes = require('fs').readFileSync(path);\nlet imports = {};\nimports['./bindgen'] = require('./bindgen');\n\nconst wasmModule = new WebAssembly.Module(bytes);\nconst wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nmodule.exports = wasmInstance.exports;\n","/* tslint:disable */\nvar wasm;\n\nconst TextEncoder = require('util').TextEncoder;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr = wasm.__wbindgen_malloc(buf.length);\n    getUint8Memory().set(buf, ptr);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr;\n}\n\nfunction passArray8ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 1);\n    getUint8Memory().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nconst TextDecoder = require('util').TextDecoder;\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null) {\n        cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n    }\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n    return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nmodule.exports.__wbindgen_string_new = function(p, l) {\n    return addHeapObject(getStringFromWasm(p, l));\n};\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nmodule.exports.__wbindgen_rethrow = function(idx) { throw takeObject(idx); };\n\nfunction freeEncoding(ptr) {\n\n    wasm.__wbg_encoding_free(ptr);\n}\n/**\n*/\nclass Encoding {\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeEncoding(ptr);\n    }\n\n    /**\n    * @param {string} arg0\n    * @returns {}\n    */\n    constructor(arg0) {\n        const ptr0 = passStringToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            this.ptr = wasm.encoding_new(ptr0, len0);\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {Uint8Array} arg0\n    * @returns {string}\n    */\n    encode(arg0) {\n        const ptr0 = passArray8ToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        const retptr = globalArgumentPtr();\n        try {\n            wasm.encoding_encode(retptr, this.ptr, ptr0, len0);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getStringFromWasm(rustptr, rustlen).slice();\n            wasm.__wbindgen_free(rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {string} arg0\n    * @returns {Uint8Array}\n    */\n    decode(arg0) {\n        const ptr0 = passStringToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        const retptr = globalArgumentPtr();\n        try {\n            wasm.encoding_decode(retptr, this.ptr, ptr0, len0);\n            const mem = getUint32Memory();\n            const rustptr = mem[retptr / 4];\n            const rustlen = mem[retptr / 4 + 1];\n\n            const realRet = getArrayU8FromWasm(rustptr, rustlen).slice();\n            wasm.__wbindgen_free(rustptr, rustlen * 1);\n            return realRet;\n\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n    /**\n    * @param {string} arg0\n    * @returns {boolean}\n    */\n    is_corrupt(arg0) {\n        const ptr0 = passStringToWasm(arg0);\n        const len0 = WASM_VECTOR_LEN;\n        try {\n            return (wasm.encoding_is_corrupt(this.ptr, ptr0, len0)) !== 0;\n\n        } finally {\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n\n        }\n\n    }\n}\nmodule.exports.Encoding = Encoding;\n\nmodule.exports.__wbindgen_throw = function(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n};\n\nwasm = require('./bindgen_bg');\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint camelcase:0 */\n\nconst bindgen = require('./bindgen')\n\nfunction txError (fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw new Error(e)\n  }\n}\n\nfunction checkFixBuffer (buf) {\n  if (typeof Buffer === 'function' && buf instanceof Buffer) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n  }\n  return buf\n}\n\nclass Encoding {\n  constructor (encoding_name) {\n    if (typeof encoding_name !== 'string') {\n      throw new Error('encoding_name must be a string')\n    }\n    this._raw = txError(() => new bindgen.Encoding(encoding_name))\n  }\n\n  encode (data) {\n    data = checkFixBuffer(data)\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('data must be a Uint8Array')\n    }\n    return txError(() => this._raw.encode(data))\n  }\n\n  decode (data) {\n    if (typeof data !== 'string') {\n      throw new Error('data must be a string')\n    }\n    return txError(() => this._raw.decode(data))\n  }\n\n  is_corrupt (data) {\n    if (typeof data !== 'string') {\n      throw new Error('data must be a string')\n    }\n    return txError(() => this._raw.is_corrupt(data))\n  }\n}\n\nexports.Encoding = Encoding\n","/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || AssertionError;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = (typeof pathDepth === 'undefined' ? parsed.length : pathDepth);\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === (pathDepth - 1)) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === (pathDepth - 1)) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcut.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function(prev, cur) {\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAssertion = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy &&\n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","var fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function(prop) {\n          if (\n            !Object.prototype.hasOwnProperty(prop) &&\n            builtins.indexOf(prop) === -1\n          ) {\n            var dist = stringDistanceCapped(\n              property,\n              prop,\n              suggestionDistance\n            );\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = [];\n  // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n      memo[i][j] = Math.min(\n        memo[i - 1][j] + 1,\n        memo[i][j - 1] + 1,\n        memo[i - 1][j - 1] +\n          (ch === strB.charCodeAt(j - 1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwrites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwrites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwrites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   * - still\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been', 'is'\n  , 'and', 'has', 'have', 'with'\n  , 'that', 'which', 'at', 'of'\n  , 'same', 'but', 'does', 'still' ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions.\n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   *\n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'object tested must be an array, a map, an object,'\n              + ' a set, a string, or a weakset, but ' + objType + ' given',\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n\n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n\n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n\n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n\n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is a truthy value (considered `true` in boolean context).\n   * However, it's often best to assert that the target is strictly (`===`) or\n   * deeply equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   *\n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      var prevLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      this.eql(val);\n      flag(this, 'lockSsfi', prevLockSsfi);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount > n\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= n\n        , 'expected #{this} to have a ' + descriptor + ' at least #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount < n\n        , 'expected #{this} to have a ' + descriptor + ' below #{exp} but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + ' below #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , errorMessage\n      , shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount <= n\n        , 'expected #{this} to have a ' + descriptor + ' at most #{exp} but got #{act}'\n        , 'expected #{this} to have a ' + descriptor + ' above #{exp}'\n        , n\n        , itemsCount\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `start`, and less\n   * than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , errorMessage\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length'\n        , itemsCount;\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n      this.assert(\n          itemsCount >= start && itemsCount <= finish\n        , 'expected #{this} to have a ' + descriptor + ' within ' + range\n        , 'expected #{this} to not have a ' + descriptor + ' within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   *\n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , nameType = typeof name;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    if (isNested) {\n      if (nameType !== 'string') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string when using nested syntax',\n          undefined,\n          ssfi\n        );\n      }\n    } else {\n      if (nameType !== 'string' && nameType !== 'number' && nameType !== 'symbol') {\n        throw new AssertionError(\n          flagMsg + 'the argument to property must be a string, number, or symbol',\n          undefined,\n          ssfi\n        );\n      }\n    }\n\n    if (isNested && isOwn) {\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   *\n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` or `size` is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);\n   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi')\n      , descriptor = 'length'\n      , itemsCount;\n\n    switch (objType) {\n      case 'map':\n      case 'set':\n        descriptor = 'size';\n        itemsCount = obj.size;\n        break;\n      default:\n        new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n        itemsCount = obj.length;\n    }\n\n    this.assert(\n        itemsCount == n\n      , 'expected #{this} to have a ' + descriptor + ' of #{exp} but got #{act}'\n      , 'expected #{this} to not have a ' + descriptor + ' of #{act}'\n      , n\n      , itemsCount\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string('taco', 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string('taco');\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search.\n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , actual\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   *\n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0;\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers',\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === 'number' && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   *     expect.fail();\n   *     expect.fail(\"custom error message\");\n   *     expect.fail(1, 2);\n   *     expect.fail(1, 2, \"custom error message\");\n   *     expect.fail(1, 2, \"custom error message\", \">\");\n   *     expect.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail([message])\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     *     should.fail();\n     *     should.fail(\"custom error message\");\n     *     should.fail(1, 2);\n     *     should.fail(1, 2, \"custom error message\");\n     *     should.fail(1, 2, \"custom error message\", \">\");\n     *     should.fail(1, 2, undefined, \">\");\n     *\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      if (arguments.length < 2) {\n          message = actual;\n          actual = undefined;\n      }\n\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   *     assert.fail();\n   *     assert.fail(\"custom error message\");\n   *     assert.fail(1, 2);\n   *     assert.fail(1, 2, \"custom error message\");\n   *     assert.fail(1, 2, \"custom error message\", \">\");\n   *     assert.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n        // Comply with Node's fail([message]) interface\n\n        message = actual;\n        actual = undefined;\n    }\n\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and strictly equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, \"array doesn't contain value\");\n   *     assert.notInclude('foobar', 'baz', \"string doesn't contain substring\");\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   *\n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   *\n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *\n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *\n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   *\n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   *\n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *\n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *\n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` or `size` with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');\n   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'Error thrown must have this msg');\n   *     assert.throws(fn, /Error thrown must have a msg that matches this/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.2.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = require('./lib/chai');\n","module.exports = {\n  \"hck0\": {\n    \"correct\": [\n      [\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\"\n      ],\n      [\n        \"HcKcJAYWKF7xpsddq6ojeqbIVCp837fpcNz77479pND7KzBmH7nUcV4u4sN3vpr\",\n        \"82f5517b6744637f1a923c28a09decf4ae1331deebbf7307d5602b3f59315353\"\n      ],\n      [\n        \"HcKCjV6zmkIPz9w9zwFcFRxm8SGvxzv39sGNPGRIenp9yzryYDScjDvJraz3bbz\",\n        \"d3985a90ec7ebfc54a22c2cbf44d4b6299fc4cc71a08231dfbe217b8e2248e89\"\n      ],\n      [\n        \"HcKCjjt9OTf7Fk3wc3qH3bHsEKkcwb7gzY8SudxIvWxedi4iThtj4jE9fn8cpvz\",\n        \"a65f6c8bd2ab35165e7c84f122942a87a6c5fd198ec8a56c41a34891e49d249f\"\n      ],\n      [\n        \"HcKcIiYN3okO6gtc9egtaufqK68Nr9r59QG6SO9p6SvfejjtJw9bOq7FKsv7jjr\",\n        \"22eccb54de1a42f90d204caf573cc87e1bfbcdc8b7eee4685225324d7e16bfa5\"\n      ],\n      [\n        \"HcKcjt5FWUa9qfvjwfRJVbq8rDbbjdiwtxgd3Xjoc57R6vo4WN9BWWMi3Mtmakr\",\n        \"cb65acc1f79689a9609a05fe80c2148d15958c3cd92d16fb0e51baab3e1ad568\"\n      ],\n      [\n        \"HcKcIeYSAnBbjshvjb5qw7z5GT96d59yd8u3RzdtQITjfnwnfe7K4GvU563pvxr\",\n        \"12f1030214c4f44876faf71b34bfc1eff71fa79860727a2492b2ac293aad1a93\"\n      ],\n      [\n        \"HcKCIy6WeyDFtcbqkeKY7Wrkoo53hoxx6xJxdq5y6kJww43rubIOzOiKsg8ec4i\",\n        \"5f9525c659082f51157ed60a6b7793b6d6e59361bf77e2935aeb309850dc350a\"\n      ]\n    ],\n    \"correctable\": [\n      [\n        \"HcKciDds_OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ],\n      [\n        \"HcKciDds_Oiogymxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ],\n      [\n        \"HcKciDdsjOiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ],\n      [\n        \"hckciy6weydftcbqkeky7wrkoo53hoxx6xjxdq5y6kjww43rubiozoiksg8ec4i\",\n        \"5f9525c659082f51157ed60a6b7793b6d6e59361bf77e2935aeb309850dc350a\",\n        \"HcKCIy6WeyDFtcbqkeKY7Wrkoo53hoxx6xJxdq5y6kJww43rubIOzOiKsg8ec4i\"\n      ],\n      [\n        \"HCKCIY6WEYDFTCBQKEKY7WRKOO53HOXX6XJXDQ5Y6KJWW43RUBIOZOIKSG8EC4I\",\n        \"5f9525c659082f51157ed60a6b7793b6d6e59361bf77e2935aeb309850dc350a\",\n        \"HcKCIy6WeyDFtcbqkeKY7Wrkoo53hoxx6xJxdq5y6kJww43rubIOzOiKsg8ec4i\"\n      ]\n    ],\n    \"errantId\": [\n      [\n        \"HcKciDds_Oiog_mxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4O_c9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ],\n      [\n        \"HcKciDdsjjjjjjjjjnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ],\n      [\n        \"HdKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"HcidError(\\\"PrefixMismatch\\\")\"\n      ],\n      [\n        \"HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5id\",\n        \"HcidError(\\\"BadIdLen:64,Expected:63\\\")\"\n      ],\n      [\n        \"HCKCI_6WEYDFTCBQKEKY7WRKOO53HOXX6XJXDQ5Y6KJWW43RUBIOZOIKSG8EC4I\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ]\n    ],\n    \"errantData\": [\n      [\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329a\",\n        \"HcidError(\\\"BadDataLen:31,Expected:32\\\")\"\n      ]\n    ]\n  },\n  \"hca0\": {\n    \"correct\": [\n      [\n        \"HcAciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\"\n      ]\n    ],\n    \"correctable\": [\n      [\n        \"HcAciDds_OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcAciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ]\n    ],\n    \"errantId\": [\n      [\n        \"HcAciDds_Oiog_mxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4O_c9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ]\n    ],\n    \"errantData\": [\n      [\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329a\",\n        \"HcidError(\\\"BadDataLen:31,Expected:32\\\")\"\n      ]\n    ]\n  },\n  \"hcs0\": {\n    \"correct\": [\n      [\n        \"HcSciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\"\n      ]\n    ],\n    \"correctable\": [\n      [\n        \"HcSciDds_OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\",\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba\",\n        \"HcSciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i\"\n      ]\n    ],\n    \"errantId\": [\n      [\n        \"HcSciDds_Oiog_mxb_HKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4O_c9w5i\",\n        \"HcidError(\\\"TooManyErrors\\\")\"\n      ]\n    ],\n    \"errantData\": [\n      [\n        \"0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329a\",\n        \"HcidError(\\\"BadDataLen:31,Expected:32\\\")\"\n      ]\n    ]\n  }\n}\n;","/* eslint no-new:0 */\n\nconst { Encoding } = require('..')\nconst { expect } = require('chai')\nconst fixtures = require('../../test/fixtures')\n\nconst TEST_HEX_1 =\n    '0c71db50d35d760b0ea2002ff20147c7c3a8e8030d35ef28ed1adaec9e329aba'\nconst TEST_ID_1 =\n    'HcKciDds5OiogymxbnHKEabQ8iavqs8dwdVaGdJW76Vp4gx47tQDfGW4OWc9w5i'\n\ndescribe('Encoding Suite', () => {\n  describe('fixtures', () => {\n    for (let type in fixtures) {\n      const f = fixtures[type]\n      describe(type, () => {\n        let enc = null\n\n        beforeEach(() => {\n          enc = new Encoding(type)\n        })\n\n        afterEach(() => {\n          enc = null\n        })\n\n        describe('correct', () => {\n          for (let i = 0; i < f.correct.length; ++i) {\n            const t = f.correct[i]\n            it('' + i, () => {\n              const id = t[0]\n              const data = t[1]\n              expect(enc.is_corrupt(id)).equals(false)\n              expect(enc.encode(Buffer.from(data, 'hex'))).equals(id)\n              expect(Buffer.from(enc.decode(id)).toString('hex')).equals(data)\n            })\n          }\n        })\n\n        describe('correctable', () => {\n          for (let i = 0; i < f.correctable.length; ++i) {\n            const t = f.correctable[i]\n            it('' + i, () => {\n              const id = t[0]\n              const data = t[1]\n              const correctId = t[2]\n              expect(enc.is_corrupt(id)).equals(true)\n              expect(enc.encode(Buffer.from(data, 'hex'))).equals(correctId)\n              expect(Buffer.from(enc.decode(id)).toString('hex')).equals(data)\n            })\n          }\n        })\n\n        describe('errantId', () => {\n          for (let i = 0; i < f.errantId.length; ++i) {\n            const t = f.errantId[i]\n            it('' + i, () => {\n              const id = t[0]\n              const err = t[1]\n              expect(enc.is_corrupt(id)).equals(true)\n              try {\n                enc.decode(id)\n              } catch (e) {\n                expect(e.toString()).equals('Error: ' + err)\n                return\n              }\n              throw new Error('expected exception, got success')\n            })\n          }\n        })\n\n        describe('errantData', () => {\n          for (let i = 0; i < f.errantData.length; ++i) {\n            const t = f.errantData[i]\n            it('' + i, () => {\n              const data = t[0]\n              const err = t[1]\n              try {\n                enc.encode(Buffer.from(data, 'hex'))\n              } catch (e) {\n                expect(e.toString()).equals('Error: ' + err)\n                return\n              }\n              throw new Error('expected exception, got success')\n            })\n          }\n        })\n      })\n    }\n  })\n\n  describe('basic', () => {\n    let enc = null\n\n    beforeEach(() => {\n      enc = new Encoding('hck0')\n    })\n\n    afterEach(() => {\n      enc = null\n    })\n\n    it('should encode', () => {\n      const buf = Buffer.from(TEST_HEX_1, 'hex')\n      expect(enc.encode(buf))\n        .equals(TEST_ID_1)\n    })\n\n    it('should decode', () => {\n      expect(Buffer.from(enc.decode(TEST_ID_1)).toString('hex'))\n        .equals(TEST_HEX_1)\n    })\n\n    it('should determine not is_corrupt', () => {\n      expect(enc.is_corrupt(TEST_ID_1))\n        .equals(false)\n    })\n\n    it('should determine is_corrupt', () => {\n      expect(enc.is_corrupt(TEST_ID_1.substr(0, 10) + 'A' + TEST_ID_1.substr(11)))\n        .equals(true)\n    })\n  })\n})\n","import \"../lib/encoding.test.js\";"]}